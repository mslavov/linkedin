name: Schedule Approved Post

on:
  pull_request:
    types: [closed]
    paths:
      - "content/drafts/**/*.md"

jobs:
  schedule-post:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main
          fetch-depth: 0

      - name: Move draft to scheduled
        id: move_draft
        run: |
          # Debug: Show current directory and contents
          echo "Current directory: $(pwd)"
          echo "Content structure:"
          ls -la content/
          
          # Get the merged draft file from PR
          echo "Checking PR files..."
          DRAFT_FILE=$(git diff --name-only HEAD~1 HEAD | grep "content/drafts/.*\.md" | head -1)
          
          if [ -z "$DRAFT_FILE" ]; then
            echo "No draft file found in git diff. Checking PR files via API..."
            # Alternative: Get files from PR
            DRAFT_FILE=$(gh pr view ${{ github.event.pull_request.number }} --json files --jq '.files[].path' | grep "content/drafts/.*\.md" | head -1)
          fi
          
          if [ -z "$DRAFT_FILE" ]; then
            echo "ERROR: No draft file found in the PR"
            exit 1
          fi
          
          echo "Found draft file: $DRAFT_FILE"
          
          # Extract just the filename
          FILENAME=$(basename "$DRAFT_FILE")
          
          # Check if file exists in drafts folder
          if [ -f "$DRAFT_FILE" ]; then
            echo "File exists in drafts, moving to scheduled..."
            # Create scheduled directory if it doesn't exist
            mkdir -p content/scheduled/
            # Move to scheduled folder
            mv "$DRAFT_FILE" "content/scheduled/$FILENAME"
          elif [ -f "content/scheduled/$FILENAME" ]; then
            echo "File already exists in scheduled folder"
          else
            echo "ERROR: File not found in either drafts or scheduled folders"
            echo "Looking for file in repository..."
            find content -name "$FILENAME" -type f
            exit 1
          fi
          
          # Set outputs for Claude scheduling
          echo "filename=$FILENAME" >> $GITHUB_OUTPUT
          echo "filepath=content/scheduled/$FILENAME" >> $GITHUB_OUTPUT
          
          echo "✅ Post $FILENAME is ready for scheduling"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Update schedule with Claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          model: "claude-opus-4-20250514"
          
          direct_prompt: |
            You need to update the content/schedule.json file to add a new scheduled post.
            
            New post details:
            - File: content/scheduled/${{ steps.move_draft.outputs.filename }}
            - PR Number: ${{ github.event.pull_request.number }}
            - PR Title: ${{ github.event.pull_request.title }}
            
            Please:
            1. Read the current content/schedule.json file
            2. Read the new post file to understand its content and priority
            3. Analyze the current schedule to find the optimal slot
            4. Consider these scheduling rules:
               - High priority posts get the next available slot
               - Normal priority posts should be spaced at least 24 hours apart
               - Low priority posts can be scheduled further out
               - Avoid scheduling on weekends unless it's high priority
            5. Add the new post to the schedule.json with a unique ID
            6. Update the last_updated timestamp
            7. Commit the updated schedule.json
            
            The new entry should include:
            - id: Generate from the filename (e.g., "startup-lessons-2025")
            - file: The full path to the file
            - scheduled_date: The optimal date in YYYY-MM-DD format
            - priority: Extract from the post's frontmatter
            - original_issue: Extract from the post's frontmatter
            - status: "scheduled"
          
          allowed_tools: "Read,Edit,Bash(git add *),Bash(git commit *)"

      - name: Push schedule update
        id: push_schedule
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git push
          
          # Extract scheduled date from commit message
          SCHEDULED_DATE=$(git log -1 --pretty=%B | grep -oP 'scheduled for \K\d{4}-\d{2}-\d{2}' || echo "the next available slot")
          echo "scheduled_date=$SCHEDULED_DATE" >> $GITHUB_OUTPUT

      - name: Extract issue number
        id: extract_issue
        run: |
          # Try to extract from PR body
          ISSUE_NUM=$(grep -oP '(?:Closes|Fixes|Resolves) #\K\d+' <<< "${{ github.event.pull_request.body }}" | head -1)
          
          # If not found in body, try PR title
          if [ -z "$ISSUE_NUM" ]; then
            ISSUE_NUM=$(grep -oP '#\K\d+' <<< "${{ github.event.pull_request.title }}" | head -1)
          fi
          
          echo "issue_number=$ISSUE_NUM" >> $GITHUB_OUTPUT

      - name: Update original issue
        if: success() && steps.extract_issue.outputs.issue_number != ''
        run: |
          gh issue comment ${{ steps.extract_issue.outputs.issue_number }} \
            --body "✅ Post has been approved and scheduled for publishing on ${{ steps.push_schedule.outputs.scheduled_date }}!
            
            You can view the schedule at: [content/schedule.json](https://github.com/${{ github.repository }}/blob/main/content/schedule.json)"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Handle scheduling failure
        if: failure()
        run: |
          gh issue create \
            --title "Failed to schedule post from PR #${{ github.event.pull_request.number }}" \
            --body "The scheduling workflow failed for PR #${{ github.event.pull_request.number }}.
            
            **PR Title**: ${{ github.event.pull_request.title }}
            **Error**: Check the [workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.
            
            Please manually update the schedule or re-run the workflow." \
            --label "bug"
        env:
          GH_TOKEN: ${{ github.token }}